{"version":3,"sources":["features/Dashboard/Dashboard.js","shared/Link.js","features/Problem1/Problem1.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","height","display","alignItems","overflow","card","width","textAlign","paddingTop","paddingBottom","backgroundColor","lightBlue","cursor","cardContent","textShadow","DashboardCard","children","classes","Card","className","CardContent","Box","clone","pb","Typography","variant","Dashboard","cardFirstRef","useRef","cardSecondRef","cardThirdRef","useState","cardOff","setCardOff","handleCardOffHover","gsap","timeline","duration","to","y","ease","handleCardOffLeave","Grid","container","justifyContent","spacing","item","ref","e","delay","clickAction","x","scale","css","opacity","replace","cardActive","onMouseEnter","Link","props","component","RouterLink","Circle","radius","idx","r","cx","cy","fill","stroke","strokeWidth","MySvg","memo","circleRadius","Array","keys","map","Problem1","problem1","circleRef","handleReverseAnimation_ref","useEffect","Circles","firstElementChild","childNodes","CirclesArr","from","flagPause","flagReverse","tl","repeat","overwrite","repeatDelay","stagger","handlePauseAnimation","event","code","play","pause","document","addEventListener","reverse","removeEventListener","flexDirection","el","onClick","p","Button","color","flexGrow","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3db96e09.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport DelayLink from \"react-delay-link\";\nimport { gsap } from \"gsap\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    overflow: \"hidden\",\n  },\n  card: {\n    width: 200,\n    textAlign: \"center\",\n    paddingTop: 50,\n    paddingBottom: 50,\n    backgroundColor: lightBlue[50],\n    cursor: \"pointer\",\n  },\n  cardContent: {\n    backgroundColor: lightBlue[100],\n    textShadow: \"0 1px rgba(0, 0, 0, 0.2)\",\n  },\n}));\n\nconst DashboardCard = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.cardContent}>\n        <Box clone pb={2}>\n          <Typography variant=\"h5\">Problem</Typography>\n        </Box>\n        <Typography variant=\"h2\">{children}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  let cardFirstRef = useRef(null);\n  let cardSecondRef = useRef(null);\n  let cardThirdRef = useRef(null);\n\n  const [cardOff, setCardOff] = useState(false);\n\n  const handleCardOffHover = () => {\n    const tl = gsap.timeline({ duration: 0.3 });\n    tl.to(cardFirstRef, {\n      y: -15,\n      ease: \"sine.out\",\n    })\n      .to(cardFirstRef, {\n        y: 15,\n        ease: \"sine.out\",\n      })\n      .to(cardFirstRef, {\n        y: 0,\n        ease: \"sine.out\",\n      });\n    setCardOff(true);\n  };\n\n  const handleCardOffLeave = () => {\n    gsap.to(cardFirstRef, {\n      y: 0,\n      ease: \"sine.out\",\n    });\n    setCardOff(false);\n  };\n\n  const handleCardOn = () => {\n    const tlCardsOff = gsap.timeline();\n    tlCardsOff.to([cardSecondRef, cardThirdRef], {\n      y: -2000,\n      ease: \"sine.out\",\n      duration: 1,\n    });\n\n    const tlCardOn = gsap.timeline();\n    tlCardOn\n      .to(cardFirstRef, {\n        x: 200,\n        duration: 1,\n      })\n      .to(cardFirstRef, { duration: 1, scale: 0.5 })\n      .to(cardFirstRef, { css: { opacity: 0 } });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container justifyContent=\"center\" spacing={2}>\n        <Grid item ref={(e) => (cardFirstRef = e)}>\n          <DelayLink\n            delay={2000}\n            to=\"/problem1\"\n            clickAction={handleCardOn}\n            replace={false}\n          >\n            <DashboardCard className={classes.cardActive}>1</DashboardCard>\n          </DelayLink>\n        </Grid>\n\n        <Grid\n          item\n          ref={(e) => (cardSecondRef = e)}\n          onMouseEnter={!cardOff ? handleCardOffHover : handleCardOffLeave}\n        >\n          <DashboardCard className={classes.cardOff}>2</DashboardCard>\n        </Grid>\n        <Grid\n          item\n          ref={(e) => (cardThirdRef = e)}\n          onMouseEnter={!cardOff ? handleCardOffHover : handleCardOffLeave}\n        >\n          <DashboardCard className={classes.cardOff}>3</DashboardCard>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport MuiLink from '@material-ui/core/Link';\n\n/** @type {React.FC<import('@material-ui/core').LinkProps & import('react-router-dom').LinkProps>} */\nconst Link = (props) => {\n  return (\n    <MuiLink\n      component={RouterLink}\n      {...props}\n    />\n  );\n}\n\nexport default Link;\n","import Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport React, { memo, useRef, useEffect } from \"react\";\nimport Link from \"../../shared/Link\";\nimport { gsap } from \"gsap\";\n\nconst STROKE_WIDTH = 3;\n\nconst Circle = ({ radius, idx }) => (\n  <circle\n    r={radius}\n    cx={STROKE_WIDTH + radius + 4 * radius * idx}\n    cy=\"190\"\n    fill=\"none\"\n    stroke=\"black\"\n    strokeWidth={STROKE_WIDTH}\n  />\n);\n\nconst MySvg = memo(({ circleRadius }) => {\n  return (\n    <svg width=\"800\" height=\"400\">\n      {[...Array(10).keys()].map((idx) => (\n        <Circle key={idx} radius={circleRadius} idx={idx} />\n      ))}\n    </svg>\n  );\n});\n\nconst Problem1 = () => {\n  let problem1 = useRef(null);\n  let circleRef = useRef(null);\n  let handleReverseAnimation_ref = useRef(null);\n\n  useEffect(() => {\n    const Circles = circleRef.firstElementChild.childNodes;\n    const CirclesArr = Array.from(Circles);\n\n    let flagPause = false;\n    let flagReverse = false;\n\n    gsap.to(problem1, {\n      css: { opacity: 1 },\n\n      duration: 4,\n      ease: \"sine.out\",\n    });\n\n    // Circle animations with gsap library\n    const tl = gsap.timeline({\n      repeat: -2,\n      overwrite: \"none\",\n      repeatDelay: 0.01,\n    });\n    tl.to([...CirclesArr], {\n      y: -100,\n      duration: 0.5,\n      stagger: 0.2,\n      ease: \"sine.out\",\n    })\n      .to(\n        [...CirclesArr],\n        {\n          y: 100,\n          duration: 0.5,\n          stagger: 0.2,\n          ease: \"sine.out\",\n        },\n        \"<+=1\"\n      )\n      .to(\n        [...CirclesArr],\n        {\n          y: 0,\n          duration: 0.3,\n          stagger: 0.2,\n          ease: \"sine.out\",\n        },\n        \"<+=1.2\"\n      );\n\n    // Pause animation on Tab keypress\n    const handlePauseAnimation = (event) => {\n      if (event.code === \"Space\") {\n        if (!flagPause) {\n          tl.pause();\n          flagPause = true;\n        } else {\n          tl.play();\n          flagPause = false;\n        }\n      }\n    };\n    document.addEventListener(\"keyup\", handlePauseAnimation);\n\n    // Reverse animation on screen click\n    const handleReverseAnimation = () => {\n      if (!flagReverse) {\n        tl.reverse();\n        flagReverse = true;\n      } else {\n        tl.play();\n        flagReverse = false;\n      }\n    };\n    handleReverseAnimation_ref = handleReverseAnimation;\n\n    return () => {\n      document.removeEventListener(\"keyup\", handlePauseAnimation);\n    };\n  }, []);\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      height=\"100vh\"\n      className=\"problem1-hero\"\n      ref={(el) => (problem1 = el)}\n      onClick={() => handleReverseAnimation_ref()}\n    >\n      <Box p={3}>\n        <Link to=\"/\">\n          <Button variant=\"outlined\" color=\"primary\">\n            Back to Dashboard\n          </Button>\n        </Link>\n      </Box>\n\n      <Box\n        flexGrow={1}\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        ref={(el) => (circleRef = el)}\n      >\n        <MySvg circleRadius={20} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Problem1;\n","import React from \"react\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport Dashboard from \"./features/Dashboard/Dashboard\";\nimport Problem1 from \"./features/Problem1/Problem1\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Dashboard />\n        </Route>\n\n        <Route path=\"/problem1\">\n          <Problem1 />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}